{"version":3,"sources":["routers/RouteNames.ts","components/BoardButton/BoardButton.tsx","components/TimeMachineBoard/TimeMachineBoard.tsx","components/TimeMachineMenu/TimeMachineMenu.tsx","hooks/useTimeMachine.ts","pages/TimeMachinePage/TimeMachinePage.tsx","components/TicTacToeBoardButton/TicTacToeBoardButton.tsx","components/TicTacToeBoard/TicTacToeBoard.tsx","components/TicTacToeMenu/TicTacToeMenu.tsx","utils/utils.ts","pages/TicTacToePage/TicTacToePage.tsx","components/Navbar/Navbar.tsx","routers/AppRouter/AppRouter.tsx","pages/App/App.tsx","index.tsx"],"names":["RouteNames","BoardButton","position","bgColor","checked","isTraveling","handleClick","type","className","style","backgroundColor","opacity","cursor","boxShadow","border","borderColor","borderWidth","onClick","TimeMachineBoard","squares","useState","colors","map","TimeMachineMenu","currentPosition","timeLength","getPreviousValue","handleResume","isDisabledPrevious","setIsDisabledPrevious","isDisabledNext","setIsDisabledNext","useEffect","disabled","useTimeMachine","value","ref","useRef","history","current","unshift","length","TimeMachinePage","setCurrentPosition","setIsTraveling","Array","size","fill","setSquares","historySquares","setHistorySquares","i","newSquares","step","newPosition","TicTacToeBoardButton","color","TicTacToeBoard","state","toString","TicTacToeMenu","xIsNext","isReplaying","winner","handleReset","handleReplay","calculateTicTacToeWinner","lines","a","b","c","sleep","ms","Promise","resolve","setTimeout","TicTacToePage","initGameValues","setWinner","error","setError","setXIsNext","setIsReplaying","reset","firstPos","then","includes","slice","Navbar","htmlFor","icon","faBars","name","id","exact","to","Home","TicTacToe","AppRouter","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.272c4df0.chunk.js","sourcesContent":["/* eslint no-shadow: 0 */\r\n/* eslint no-unused-vars: 0 */\r\nenum RouteNames {\r\n    Home = '/',\r\n    TicTacToe = '/tic-tac-toe',\r\n}\r\n\r\nexport default RouteNames;\r\n","/* eslint no-unused-vars: 0 */\r\nimport React from 'react';\r\nimport 'components/BoardButton/BoardButton.css';\r\n\r\ninterface IBoardButton {\r\n  position: number;\r\n  bgColor: string;\r\n  checked: boolean;\r\n  isTraveling: boolean;\r\n  handleClick(position: number): void;\r\n}\r\n\r\nconst BoardButton = ({\r\n  position,\r\n  bgColor,\r\n  checked,\r\n  isTraveling,\r\n  handleClick,\r\n}: IBoardButton) => (\r\n  <button\r\n    type=\"button\"\r\n    className=\"square\"\r\n    style={{\r\n      backgroundColor: bgColor,\r\n      opacity: checked ? '100%' : '50%',\r\n      cursor: isTraveling ? 'not-allowed' : 'pointer',\r\n      boxShadow: checked ? '0 0 4px rgba(0, 0, 0, 0.16), 0 6px 8px rgba(0, 0, 0, 0.26)' : 'none',\r\n      border: checked ? 'groove' : 'none',\r\n      borderColor: checked ? 'black' : 'none',\r\n      borderWidth: checked ? 'thin' : '0',\r\n    }}\r\n    onClick={() => handleClick(position)}\r\n  >\r\n    {' '}\r\n  </button>\r\n);\r\n\r\nexport default BoardButton;\r\n","/* eslint no-unused-vars: 0 */\r\nimport React, { useState } from 'react';\r\nimport BoardButton from 'components/BoardButton/BoardButton';\r\nimport 'components/TimeMachineBoard/TimeMachineBoard.css';\r\n\r\ninterface ITimeMachineBoard {\r\n  squares: boolean[];\r\n  isTraveling: boolean;\r\n  handleClick(position: number): void;\r\n}\r\n\r\nconst TimeMachineBoard = ({ squares, isTraveling, handleClick }: ITimeMachineBoard) => {\r\n  const [colors] = useState<string[]>([\r\n    '#f466c8',\r\n    '#f54242',\r\n    '#5fc9f9',\r\n    '#d3adc6',\r\n    '#788f43',\r\n    '#d1c000',\r\n    '#07d1c7',\r\n    '#df5e51',\r\n    '#c9a43d',\r\n    '#3f01c0',\r\n    '#29b502',\r\n    '#e42e5f',\r\n    '#a7762b',\r\n    '#cdb852',\r\n    '#7d3f99',\r\n    '#7d3f09',\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"board-grid\">\r\n        {squares.map((checked: boolean, position: number) => (\r\n          <BoardButton\r\n            key={colors[position]}\r\n            position={position}\r\n            bgColor={colors[position]}\r\n            checked={checked}\r\n            handleClick={handleClick}\r\n            isTraveling={isTraveling}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeMachineBoard;\r\n","/* eslint no-unused-vars: 0 */\r\nimport React, { useEffect, useState } from 'react';\r\nimport 'components/TimeMachineMenu/TimeMachineMenu.css';\r\n\r\ninterface ITimeMachineMenu {\r\n  currentPosition: number;\r\n  timeLength: number;\r\n  getPreviousValue(step: number): void;\r\n  handleResume(): void;\r\n}\r\n\r\nconst TimeMachineMenu = ({\r\n  currentPosition,\r\n  timeLength,\r\n  getPreviousValue,\r\n  handleResume,\r\n}: ITimeMachineMenu) => {\r\n  const [isDisabledPrevious, setIsDisabledPrevious] = useState<boolean>(true);\r\n  const [isDisabledNext, setIsDisabledNext] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      timeLength === 0\r\n      || currentPosition === (timeLength > 1 ? timeLength - 1 : timeLength)\r\n    ) {\r\n      setIsDisabledPrevious(true);\r\n    } else setIsDisabledPrevious(false);\r\n\r\n    if (currentPosition === 0) setIsDisabledNext(true);\r\n    else setIsDisabledNext(false);\r\n  }, [currentPosition, timeLength]);\r\n\r\n  return (\r\n    <div className=\"menu-container\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"menu-option\"\r\n        disabled={isDisabledPrevious}\r\n        onClick={() => getPreviousValue(+1)}\r\n      >\r\n        Previous\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"menu-option\"\r\n        disabled={isDisabledNext}\r\n        onClick={() => getPreviousValue(-1)}\r\n      >\r\n        Next\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"menu-option\"\r\n        disabled={isDisabledNext}\r\n        onClick={() => handleResume()}\r\n      >\r\n        Resume\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeMachineMenu;\r\n","/* eslint no-unused-vars: 0 */\r\nimport { useCallback, useEffect, useRef } from 'react';\r\n\r\nconst useTimeMachine = <T>(\r\n  value: T,\r\n): [T | undefined, (position: number) => T | undefined, number, () => void] => {\r\n  const ref = useRef<T>();\r\n  const history = useRef<T[]>([]);\r\n\r\n  const getPreviousValue = (position: number) => history.current[position];\r\n\r\n  const reset = () => { history.current = []; };\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n    history.current.unshift(value);\r\n  }, [value]);\r\n\r\n  return [ref.current, getPreviousValue, history.current.length, reset];\r\n};\r\n\r\nexport default useTimeMachine;\r\n","import React, { useState } from 'react';\r\nimport TimeMachineBoard from 'components/TimeMachineBoard/TimeMachineBoard';\r\nimport TimeMachineMenu from 'components/TimeMachineMenu/TimeMachineMenu';\r\nimport useTimeMachine from 'hooks/useTimeMachine';\r\nimport 'pages/TimeMachinePage/TimeMachinePage.css';\r\n\r\nconst TimeMachinePage = () => {\r\n  const size = 4;\r\n  const [currentPosition, setCurrentPosition] = useState<number>(0);\r\n  const [isTraveling, setIsTraveling] = useState<boolean>(false);\r\n  const [squares, setSquares] = useState<boolean[]>(Array(size * size).fill(false));\r\n  const [historySquares, setHistorySquares] = useState<boolean[]>(Array(size * size).fill(false));\r\n  const [, getPreviousValue, timeLength] = useTimeMachine(historySquares);\r\n\r\n  const handleClick = (i: number) => {\r\n    if (!isTraveling) {\r\n      const newSquares = Array(size * size).fill(false) as boolean[];\r\n      newSquares[i] = true;\r\n      setSquares(newSquares);\r\n      setHistorySquares(newSquares);\r\n    }\r\n  };\r\n\r\n  const handleGetPrevious = (step: number) => {\r\n    const newPosition = currentPosition + step;\r\n\r\n    setCurrentPosition(newPosition);\r\n    if (newPosition !== 0) {\r\n      setIsTraveling(true);\r\n    } else {\r\n      setIsTraveling(false);\r\n      setHistorySquares(getPreviousValue(newPosition) ?? Array(size * size).fill(false));\r\n    }\r\n    setSquares(getPreviousValue(newPosition) ?? Array(size * size).fill(false));\r\n  };\r\n\r\n  const handleResume = () => {\r\n    setCurrentPosition(0);\r\n    setIsTraveling(false);\r\n    setSquares(getPreviousValue(0) ?? Array(size * size).fill(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-content\">\r\n      <h1>Time machine</h1>\r\n      <div className=\"time-machine-messages\">\r\n        <h5>\r\n          {isTraveling ? 'You are now traveling in time' : 'You are currently in present'}\r\n        </h5>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"board\">\r\n          <TimeMachineBoard\r\n            squares={squares}\r\n            handleClick={handleClick}\r\n            isTraveling={isTraveling}\r\n          />\r\n        </div>\r\n        <div className=\"info\">\r\n          <TimeMachineMenu\r\n            getPreviousValue={handleGetPrevious}\r\n            handleResume={handleResume}\r\n            currentPosition={currentPosition}\r\n            timeLength={timeLength}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeMachinePage;\r\n","/* eslint no-unused-vars: 0 */\r\nimport React from 'react';\r\nimport TicTacToeSquareType from 'types/TicTacToeSquareType';\r\nimport 'components/TicTacToeBoardButton/TicTacToeBoardButton.css';\r\n\r\ninterface ITicTacToeBoardButton {\r\n  position: number;\r\n  checked: TicTacToeSquareType;\r\n  isTraveling: boolean;\r\n  handleClick(position: number): void;\r\n}\r\n\r\nconst TicTacToeBoardButton = ({\r\n  position,\r\n  checked,\r\n  isTraveling,\r\n  handleClick,\r\n}: ITicTacToeBoardButton) => (\r\n  <button\r\n    type=\"button\"\r\n    className=\"tic-tac-toe-square dashed thick\"\r\n    style={{\r\n      cursor: isTraveling ? 'not-allowed' : 'pointer',\r\n      color: (checked === 'x') ? 'red' : 'blue',\r\n    }}\r\n    onClick={() => handleClick(position)}\r\n  >\r\n    {checked}\r\n  </button>\r\n);\r\n\r\nexport default TicTacToeBoardButton;\r\n","/* eslint no-unused-vars: 0 */\r\nimport React, { useState } from 'react';\r\nimport TicTacToeBoardButton from 'components/TicTacToeBoardButton/TicTacToeBoardButton';\r\nimport TicTacToeSquareType from 'types/TicTacToeSquareType';\r\nimport 'components/TicTacToeBoard/TicTacToeBoard.css';\r\n\r\ninterface ITicTacToeBoard {\r\n  squares: TicTacToeSquareType[];\r\n  isTraveling: boolean;\r\n  handleClick(position: number): void;\r\n}\r\n\r\nconst TicTacToeBoard = ({\r\n  squares,\r\n  isTraveling,\r\n  handleClick,\r\n}: ITicTacToeBoard) => (\r\n  <div>\r\n    <div className=\"tic-tac-toe-board-grid\">\r\n      {squares.map((state: TicTacToeSquareType, position: number) => (\r\n        <TicTacToeBoardButton\r\n          key={position.toString()}\r\n          position={position}\r\n          checked={state}\r\n          handleClick={handleClick}\r\n          isTraveling={isTraveling}\r\n        />\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default TicTacToeBoard;\r\n","/* eslint no-unused-vars: 0 */\r\nimport React, { useEffect, useState } from 'react';\r\nimport TicTacToeSquareType from 'types/TicTacToeSquareType';\r\nimport 'components/TicTacToeMenu/TicTacToeMenu.css';\r\n\r\ninterface ITicTacToeMenu {\r\n  currentPosition: number;\r\n  timeLength: number;\r\n  xIsNext: boolean;\r\n  isReplaying: boolean;\r\n  winner: TicTacToeSquareType | string;\r\n  getPreviousValue(step: number): void;\r\n  handleResume(): void;\r\n  handleReset(): void;\r\n  handleReplay(): void;\r\n}\r\n\r\nconst TicTacToeMenu = ({\r\n  currentPosition,\r\n  timeLength,\r\n  xIsNext,\r\n  isReplaying,\r\n  winner,\r\n  getPreviousValue,\r\n  handleResume,\r\n  handleReset,\r\n  handleReplay,\r\n}: ITicTacToeMenu) => {\r\n  const [isDisabledPrevious, setIsDisabledPrevious] = useState<boolean>(true);\r\n  const [isDisabledNext, setIsDisabledNext] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      timeLength === 0\r\n      || currentPosition === (timeLength > 1 ? timeLength - 1 : timeLength)\r\n    ) {\r\n      setIsDisabledPrevious(true);\r\n    } else setIsDisabledPrevious(false);\r\n\r\n    if (currentPosition === 0) setIsDisabledNext(true);\r\n    else setIsDisabledNext(false);\r\n  }, [currentPosition, timeLength]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"menu-container\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"ttt-menu-button lined thick\"\r\n          disabled={isDisabledPrevious || isReplaying}\r\n          onClick={() => getPreviousValue(+1)}\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"ttt-menu-button lined thick\"\r\n          disabled={isDisabledNext || isReplaying}\r\n          onClick={() => getPreviousValue(-1)}\r\n        >\r\n          Next\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"ttt-menu-button lined thick\"\r\n          disabled={isDisabledNext || isReplaying}\r\n          onClick={() => handleResume()}\r\n        >\r\n          Resume\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"menu-container\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"ttt-menu-button lined thick\"\r\n          disabled={isReplaying}\r\n          onClick={() => handleReset()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      {winner && (\r\n        <div className=\"menu-container\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"ttt-menu-button lined thick\"\r\n            disabled={isReplaying}\r\n            onClick={() => handleReplay()}\r\n          >\r\n            Replay\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <p className=\"next-to-move-header\">Next to move:</p>\r\n        <span\r\n          className=\"next-to-move\"\r\n          style={{\r\n            color: xIsNext ? 'red' : 'blue',\r\n          }}\r\n        >\r\n          {xIsNext ? 'x' : 'o'}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TicTacToeMenu;\r\n","import TicTacToeSquareType from 'types/TicTacToeSquareType';\r\n\r\n// Calculate winner in a tic tac toe match\r\nfunction calculateTicTacToeWinner(squares: TicTacToeSquareType[]) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i += 1) {\r\n    const [a, b, c] = lines[i];\r\n    if (\r\n      squares[a]\r\n      && squares[a] === squares[b]\r\n      && squares[a] === squares[c]\r\n    ) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nexport { calculateTicTacToeWinner, sleep };\r\n","/* eslint no-unused-vars: 0 */\r\n/* eslint no-await-in-loop: 0 */\r\nimport TicTacToeBoard from 'components/TicTacToeBoard/TicTacToeBoard';\r\nimport TicTacToeMenu from 'components/TicTacToeMenu/TicTacToeMenu';\r\nimport useTimeMachine from 'hooks/useTimeMachine';\r\nimport React, { useEffect, useState } from 'react';\r\nimport TicTacToeSquareType from 'types/TicTacToeSquareType';\r\nimport { calculateTicTacToeWinner, sleep } from 'utils/utils';\r\nimport 'pages/TicTacToePage/TicTacToePage.css';\r\n\r\nconst TicTacToePage = () => {\r\n  const size = 9;\r\n  const initGameValues = Array(size).fill(null) as TicTacToeSquareType[];\r\n  const [winner, setWinner] = useState<TicTacToeSquareType | string>(null);\r\n  const [error, setError] = useState<string>();\r\n  const [currentPosition, setCurrentPosition] = useState<number>(0);\r\n  const [xIsNext, setXIsNext] = useState<boolean>(true);\r\n  const [isTraveling, setIsTraveling] = useState<boolean>(false);\r\n  const [isReplaying, setIsReplaying] = useState<boolean>(false);\r\n  const [squares, setSquares] = useState<TicTacToeSquareType[]>(initGameValues);\r\n  const [historySquares, setHistorySquares] = useState<TicTacToeSquareType[]>(initGameValues);\r\n  const [, getPreviousValue, timeLength, reset] = useTimeMachine(historySquares);\r\n\r\n  const handleClick = (position: number) => {\r\n    setError('');\r\n    if (!isTraveling) {\r\n      const newSquares = historySquares.slice();\r\n\r\n      if (newSquares) {\r\n        if (calculateTicTacToeWinner(squares) || !historySquares.includes(null)) {\r\n          setError('The game has ended');\r\n          return;\r\n        }\r\n        if (squares[position]) {\r\n          setError('That position is already taken');\r\n          return;\r\n        }\r\n\r\n        newSquares[position] = xIsNext ? 'x' : 'o';\r\n        setXIsNext(!xIsNext);\r\n        setSquares(newSquares);\r\n        setHistorySquares(newSquares);\r\n      }\r\n    } else {\r\n      setError('You can not alter time events!');\r\n    }\r\n  };\r\n\r\n  const handleGetPrevious = (step: number) => {\r\n    const newPosition = currentPosition + step;\r\n\r\n    setCurrentPosition(newPosition);\r\n    if (newPosition !== 0) {\r\n      setIsTraveling(true);\r\n    } else {\r\n      setIsTraveling(false);\r\n      setHistorySquares(getPreviousValue(newPosition) ?? Array(size).fill(false));\r\n    }\r\n    setSquares(getPreviousValue(newPosition) ?? Array(size).fill(false));\r\n  };\r\n\r\n  const handleResume = () => {\r\n    setCurrentPosition(0);\r\n    setIsTraveling(false);\r\n    setSquares(getPreviousValue(0) ?? Array(size).fill(false));\r\n  };\r\n\r\n  const handleReset = () => {\r\n    reset();\r\n    setSquares(initGameValues);\r\n    setHistorySquares(initGameValues);\r\n    setCurrentPosition(0);\r\n    setIsTraveling(false);\r\n    setXIsNext(true);\r\n    setError('');\r\n    setWinner(null);\r\n  };\r\n\r\n  const handleReplay = async () => {\r\n    setIsTraveling(true);\r\n    setIsReplaying(true);\r\n    const firstPos = timeLength - 1;\r\n    setCurrentPosition(firstPos);\r\n    setSquares(getPreviousValue(firstPos) ?? Array(size).fill(false));\r\n    for (let position = firstPos - 1; position >= 0; position -= 1) {\r\n      await sleep(500).then(() => {\r\n        setCurrentPosition(position);\r\n        setSquares(getPreviousValue(position) ?? Array(size).fill(false));\r\n      });\r\n    }\r\n    setIsTraveling(false);\r\n    setIsReplaying(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (calculateTicTacToeWinner(historySquares)) {\r\n      setWinner(calculateTicTacToeWinner(historySquares));\r\n    } else if (!historySquares.includes(null)) {\r\n      setWinner('it\\'s a tie');\r\n    }\r\n  }, [historySquares]);\r\n\r\n  return (\r\n    <div className=\"page-content\">\r\n      <h1 className=\"tic-tac-toe-title\">Tic Tac Toe</h1>\r\n      <div className=\"tic-tac-toe-messages\">\r\n        <h5 className=\"tic-tac-toe-is-traveling\">\r\n          {isTraveling\r\n            ? 'You are now traveling in time'\r\n            : 'You are currently in present'}\r\n        </h5>\r\n        {winner && !isReplaying && (\r\n          <h5 className=\"tic-tac-toe-winner\">{`The winner is: ${winner}`}</h5>\r\n        )}\r\n        {error && !isReplaying && (\r\n          <h5 className=\"tic-tac-toe-error\">{error}</h5>\r\n        )}\r\n        {isReplaying && <h5>Replaying...</h5>}\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"board\">\r\n          <TicTacToeBoard\r\n            squares={squares}\r\n            handleClick={handleClick}\r\n            isTraveling={isTraveling}\r\n          />\r\n        </div>\r\n        <div className=\"info\">\r\n          <TicTacToeMenu\r\n            getPreviousValue={handleGetPrevious}\r\n            handleResume={handleResume}\r\n            handleReset={handleReset}\r\n            handleReplay={handleReplay}\r\n            currentPosition={currentPosition}\r\n            timeLength={timeLength}\r\n            xIsNext={xIsNext}\r\n            winner={winner}\r\n            isReplaying={isReplaying}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicTacToePage;\r\n","/* eslint jsx-a11y/label-has-associated-control: 0 */\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { NavLink } from 'react-router-dom';\r\nimport React from 'react';\r\nimport RouteNames from 'routers/RouteNames';\r\nimport 'components/Navbar/Navbar.css';\r\n\r\nconst Navbar = () => (\r\n  <nav>\r\n    <button type=\"button\" className=\"logo\">\r\n      TM\r\n    </button>\r\n    <label htmlFor=\"toggle\" className=\"menu-label\">\r\n      <FontAwesomeIcon icon={faBars} />\r\n    </label>\r\n    <input name=\"toggle\" id=\"toggle\" type=\"checkbox\" className=\"menu-button\" />\r\n    <ul>\r\n      <li>\r\n        <NavLink className=\"link\" exact to={RouteNames.Home}>\r\n          Home\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink className=\"link\" exact to={RouteNames.TicTacToe}>\r\n          Tic tac toe\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport React from 'react';\r\nimport RouteNames from 'routers/RouteNames';\r\nimport TimeMachinePage from 'pages/TimeMachinePage/TimeMachinePage';\r\nimport TicTacToePage from 'pages/TicTacToePage/TicTacToePage';\r\nimport Navbar from 'components/Navbar/Navbar';\r\n\r\nconst AppRouter = () => (\r\n  <Router>\r\n    <div className=\"page-container\">\r\n      <div className=\"content-wrap\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path={RouteNames.TicTacToe} component={TicTacToePage} />\r\n          <Route path={RouteNames.Home} component={TimeMachinePage} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\nimport AppRouter from 'routers/AppRouter/AppRouter';\n\nfunction App() {\n  return (\n    <AppRouter />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'pages/App/App';\nimport 'index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}